#!/bin/sh
languages="json c cpp javascript rust html ql ruby java css python julia go agda php scala bash regex jsdoc"
# verilog ocaml typescript haskell fluent swift embedded-template c-sharp
# dashed language names currently don't work, the dash needs to be converted to an underscore

if [ ! -d "tree-sitter" ]; then
  git clone --depth 1 "https://github.com/tree-sitter/tree-sitter"
  cd tree-sitter
  make
  cd ..
fi

mkdir -p include/tree_sitter
cp tree-sitter/lib/include/tree_sitter/api.h ./include/tree_sitter/

# download langs
for lang in $languages; do
  if [ ! -d "tree-sitter-$lang" ]; then
    git clone --depth 1 "https://github.com/tree-sitter/tree-sitter-$lang"
  fi
done

cat << EOF > treesitter.h
#pragma once
#include <tree_sitter/api.h>

EOF

# forward declarations
for lang in $languages; do
  echo "TSLanguage *tree_sitter_$lang();" >> treesitter.h
done

cat << EOF >> treesitter.h

struct FileTypeTS {
  char *filetype;
  TSLanguage *(*language)();
};

static struct FileTypeTS FileTypeTable[] = {
EOF

for lang in $languages; do
  echo "  {\"$lang\", tree_sitter_$lang}," >> treesitter.h
done

cat << EOF >> treesitter.h
  {NULL, NULL}
};
EOF

rm -rf obj
mkdir -p obj

CFLAGS="$CFLAGS -I tree-sitter/lib/include"
CXXFLAGS="$CXXFLAGS -I tree-sitter/lib/include"

for lang in $languages; do
  cc $CFLAGS -c "tree-sitter-$lang/src/parser.c" -o "obj/$lang-parser.o" -O3

  if [ -f "tree-sitter-$lang/src/scanner.c" ]; then
    cc $CFLAGS -c "tree-sitter-$lang/src/scanner.c" -o "obj/$lang-scanner.o" -O3
  fi
  
  if [ -f "tree-sitter-$lang/src/scanner.cc" ]; then
    c++ $CXXFLAGS -c "tree-sitter-$lang/src/scanner.cc" -o "obj/$lang-scanner.o" -O3
  fi
done

cp tree-sitter/libtree-sitter.a ./
ar rcs libtree-sitter.a obj/*

cp treesitter.h include/tree_sitter/
